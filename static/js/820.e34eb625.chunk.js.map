{"version":3,"file":"static/js/820.e34eb625.chunk.js","mappings":"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","sources":["components/Form.staled.js","components/FormAuth.styled.js","hooks/useIconToggle.jsx","components/RegisterForm.jsx","pages/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n  width: 180px;\n  border: 1px solid #e8ebef;\n  box-shadow: inset 2px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: red;\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin: 10px 50px;\n  padding: 12px;\n  width: 400px;\n`;\n\nexport const LabelForm = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const Iсon = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(15%);\n  left: 165px;\n  z-index: 100;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { VscEyeClosed, VscEye } from 'react-icons/vsc';\n\nexport const useIconToggle = () => {\n  const [visible, setVisible] = useState(false);\n  const InputType = visible ? 'text' : 'password';\n  const Iсon = visible ? <VscEyeClosed /> : <VscEye />;\n  const onShow = () => {\n    setVisible(!visible);\n  };\n\n  return [InputType, Iсon, onShow];\n};\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { register } from 'redux/Auth/operations';\nimport { useDispatch } from 'react-redux';\n\nimport { useIconToggle } from 'hooks/useIconToggle';\nimport { Iсon, LabelForm, StyledForm } from './FormAuth.styled';\nimport { Label, StyledError, StyledField } from './Form.staled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .min(4, 'Name must be 4 characters long'),\n  email: Yup.string()\n    .email('The value entered is not a mail')\n    .required('Email is required')\n    .matches(\n      /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i,\n      'Fill out the field correctly, please'\n    ),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be 6 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const RegisterForm = () => {\n  const [PasswordInputType, ToggleIkon, handleShow] = useIconToggle();\n\n  const dispatch = useDispatch();\n  const handleSubmit = (values, actions) => {\n    dispatch(register(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <StyledField name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n        <Label>\n          Email\n          <StyledField name=\"email\" type=\"email\" placeholder=\"jane@acme.com\" />\n          <StyledError name=\"email\" component=\"div\" />\n        </Label>\n\n        <LabelForm>\n          Password\n          <StyledField name=\"password\" type={PasswordInputType} />\n          <Iсon onClick={handleShow}>{ToggleIkon}</Iсon>\n          <StyledError name=\"password\" component=\"div\" />\n        </LabelForm>\n\n        <button type=\"submit\">Register</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { RegisterForm } from 'components/RegisterForm';\n\nconst helmetContext = {};\n\nexport default function Register() {\n  return (\n    <HelmetProvider context={helmetContext}>\n      <Helmet>\n        <title>Register</title>{' '}\n      </Helmet>\n      <RegisterForm />\n    </HelmetProvider>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","StyledField","Field","_templateObject3","StyledError","ErrorMessage","_templateObject4","LabelForm","Iсon","useIconToggle","_useState","useState","_useState2","_slicedToArray","visible","setVisible","_jsx","VscEyeClosed","VscEye","schema","Yup","shape","name","required","min","email","matches","password","RegisterForm","_useIconToggle","_useIconToggle2","PasswordInputType","ToggleIkon","handleShow","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","children","_jsxs","component","type","placeholder","onClick","helmetContext","Register","HelmetProvider","context","Helmet"],"sourceRoot":""}