{"version":3,"file":"static/js/212.f9117b66.chunk.js","mappings":"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","sources":["components/Forms/Form.staled.js","components/Forms/FormAuth.styled.js","hooks/useIconToggle.js","components/Forms/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n  width: 180px;\n  border: 1px solid #e8ebef;\n  box-shadow: inset 2px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: red;\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin: 10px 50px;\n  padding: 12px;\n  width: 400px;\n`;\n\nexport const LabelForm = styled.label`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const Iсon = styled.div`\n  position: absolute;\n  top: 32px;\n  left: 165px;\n  z-index: 100;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { VscEyeClosed, VscEye } from 'react-icons/vsc';\n\nexport const useIconToggle = () => {\n  const [visible, setVisible] = useState(false);\n  const inputType = visible ? 'text' : 'password';\n  const Iсon = visible ? <VscEyeClosed /> : <VscEye />;\n  const onShow = () => {\n    setVisible(!visible);\n  };\n\n  return [visible, inputType, Iсon, onShow];\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { logIn } from 'redux/Auth/operations';\nimport { useIconToggle } from 'hooks/useIconToggle';\n\nimport { Iсon, LabelForm, StyledForm } from './FormAuth.styled';\nimport { Label, StyledError, StyledField } from './Form.staled';\n\nconst schema = Yup.object().shape({\n  email: Yup.string()\n    .email('The value entered is not a mail')\n    .required('Email is required')\n    .matches(\n      /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i,\n      'Fill out the field correctly, please'\n    ),\n  password: Yup.string()\n    .required('Password is required')\n    .min(6, 'Password must be 6 characters long')\n    .matches(/[a-zA-Z]/, 'Password can only contain Latin letters.'),\n});\n\nexport const LoginForm = () => {\n  const [visible, inputType, ToggleIсon, onShow] = useIconToggle();\n  const [, setVisibleIcon] = useState(false);\n\n  const dispatch = useDispatch();\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        email: '',\n        password: '',\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm>\n        <Label>\n          Email\n          <StyledField name=\"email\" type=\"email\" placeholder=\"jane@acme.com\" />\n          <StyledError name=\"email\" component=\"div\" />\n        </Label>\n\n        <LabelForm>\n          Password\n          <StyledField\n            name=\"password\"\n            type={inputType}\n            onFocus={() => setVisibleIcon(ps => !ps)}\n            onBlur={() => setVisibleIcon(ps => !ps)}\n          />\n          {visible && <Iсon onClick={onShow}>{ToggleIсon}</Iсon>}\n          <StyledError name=\"password\" component=\"div\" />\n        </LabelForm>\n\n        <button type=\"submit\">Log in</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport { LoginForm } from 'components/Forms/LoginForm';\n\nconst helmetContext = {};\n\nexport default function Login() {\n  return (\n    <HelmetProvider context={helmetContext}>\n      <Helmet>\n        <title>Log in</title>\n      </Helmet>\n      <LoginForm />\n    </HelmetProvider>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","StyledField","Field","_templateObject3","StyledError","ErrorMessage","_templateObject4","LabelForm","Iсon","useIconToggle","_useState","useState","_useState2","_slicedToArray","visible","setVisible","inputType","_jsx","VscEyeClosed","VscEye","schema","Yup","shape","email","required","matches","password","min","LoginForm","_useIconToggle","_useIconToggle2","ToggleIсon","onShow","setVisibleIcon","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","children","_jsxs","name","type","placeholder","component","onFocus","ps","onBlur","onClick","helmetContext","Login","HelmetProvider","context","Helmet"],"sourceRoot":""}