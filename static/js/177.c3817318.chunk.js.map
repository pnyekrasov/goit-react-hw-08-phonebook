{"version":3,"file":"static/js/177.c3817318.chunk.js","mappings":"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","sources":["components/Form.staled.js","redux/Phonebook/selectors.jsx","components/ContactForm.jsx","components/PhonebookList/PhonebookList.staled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/Modal.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/PhonebookList/PhonebookList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n  width: 180px;\n  border: 1px solid #e8ebef;\n  box-shadow: inset 2px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: red;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectNumberContacts = createSelector(\n  [selectContacts],\n  contacts => {\n    return contacts.length;\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/Phonebook/operations';\nimport { selectContacts } from 'redux/Phonebook/selectors';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Label, StyledForm, StyledField, StyledError } from './Form.staled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('Phone number is required')\n    .matches(\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={schema}\n      onSubmit={(values, actions) => {\n        contacts.find(\n          contact => contact.name.toLowerCase() === values.name.toLowerCase()\n        )\n          ? alert(`${values.name} is already in contacts`)\n          : dispatch(addContact(values));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <Label>\n          Name\n          <StyledField name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Phone Number\n          <StyledField name=\"number\" placeholder=\"XXX-XX-XX\" />\n          <StyledError name=\"number\" component=\"div\" />\n        </Label>\n\n        <button type=\"submit\">Add contact</button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsBook = styled.div`\n  margin: 10px 50px;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const InputFilter = styled.input`\n  margin-bottom: 20px;\n  padding: 4px;\n  width: 180px;\n  border: 1px solid #e8ebef;\n  box-shadow: inset 2px 2px rgba(0, 0, 0, 0.2);\n`;\n","import { useDispatch } from 'react-redux';\nimport { getVisibleContacts } from 'redux/Phonebook/filterSlice';\nimport { InputFilter, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find contact by name\n      <InputFilter\n        type=\"text\"\n        name=\"text\"\n        onChange={evt => dispatch(getVisibleContacts(evt.target.value))}\n      />\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactCard = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\n\nexport const Span = styled.span`\n  margin-right: 12px;\n`;\n\n\n","import Modal from 'react-modal';\n\nModal.setAppElement('#root');\n\nconst customStyles = {\n  overlay: {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    width: '100vw',\n    height: '100vh',\n    display: 'flex',\n    alignItems: 'center',\n    flexDirection: 'column',\n    backgroundColor: 'rgba(0, 0, 0, 0.8)',\n    zIndex: '1200',\n    opacity: '0',\n    transition: 'opacity 300ms',\n  },\n\n  'overlay:after': {\n    opacity: '1',\n    transform: 'translateY(0%)',\n  },\n  'overlay:before': {\n    opacity: '0',\n    ransform: 'translateY(-50%)',\n  },\n\n  '::before': {\n    content: '\"\"',\n    display: 'block',\n    height: '1px',\n    flexGrow: '1',\n  },\n  '::after': {\n    content: '\"\"',\n    display: 'block',\n    height: '1px',\n    flexGrow: '1',\n  },\n\n  content: {\n    position: 'relative',\n    display: 'flex',\n    gap: '8px',\n    alignItems: 'center',\n    flexDirection: 'column',\n    top: '50%',\n    backgroundColor: '#fff',\n    borderRadius: '30px',\n    transition: 'transform 300ms',\n    transform: 'translateY(-50%)',\n  },\n};\n\nexport const ModalWindow = ({ isOpen, isClose, children }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={isClose}\n      closeTimeoutMS={300}\n      style={customStyles}\n    >\n      {children}\n      <button type=\"button\" onClick={() => isClose()}>\n        Cancel\n      </button>\n    </Modal>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { deleteContact } from 'redux/Phonebook/operations';\nimport { ContactCard, Span } from './ContactItem.styled';\nimport { ModalWindow } from 'components/Modal';\nimport { useState } from 'react';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [modalDelOpen, setModalDelOpen] = useState(false);\n  const dispatch = useDispatch();\n  return (\n    <ContactCard>\n      {name}:&nbsp;<Span>{number}</Span>\n      <button type=\"button\" onClick={() => setModalDelOpen(true)}>\n        Delete\n      </button>\n      <ModalWindow isOpen={modalDelOpen} isClose={() => setModalDelOpen(false)}>\n        <h2>Are you sure that you want to delete this contact?</h2>\n        <button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </button>\n      </ModalWindow>\n    </ContactCard>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 12px;\n  margin-left: 44px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 12px;\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectNumberContacts,\n  selectVisibleContacts,\n} from 'redux/Phonebook/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { List, ListItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const numberContacts = useSelector(selectNumberContacts);\n\n  return (\n    <>\n      <p>Number of contacts:&nbsp;{numberContacts}</p>\n      <List>\n        {visibleContacts.map(item => (\n          <ListItem key={item.id}>\n            <ContactItem {...item} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import { useEffect } from 'react';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/Phonebook/selectors';\nimport { fetchContacts } from 'redux/Phonebook/operations';\n\nimport { ContactForm } from 'components/ContactForm';\nimport { ContactsBook } from './PhonebookList.staled';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nexport const PhonebookList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <ContactsBook>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </ContactsBook>\n  );\n};\n","import { PhonebookList } from 'components/PhonebookList/PhonebookList';\nimport { Helmet, HelmetProvider } from 'react-helmet-async';\n\nconst helmetContext = {};\n\nexport default function Phonebook() {\n  return (\n    <HelmetProvider context={helmetContext}>\n      <Helmet>\n        <title>Your phonebook</title>\n      </Helmet>\n\n      <PhonebookList />\n    </HelmetProvider>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","StyledField","Field","_templateObject3","StyledError","ErrorMessage","_templateObject4","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","selectNumberContacts","length","schema","Yup","shape","required","matches","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","find","alert","concat","addContact","resetForm","children","_jsxs","component","placeholder","type","ContactsBook","InputFilter","Filter","onChange","evt","getVisibleContacts","target","value","ContactCard","Span","Modal","customStyles","overlay","position","top","left","width","height","display","alignItems","flexDirection","backgroundColor","zIndex","opacity","transition","transform","ransform","content","flexGrow","gap","borderRadius","ModalWindow","_ref","isOpen","isClose","onRequestClose","closeTimeoutMS","style","onClick","ContactItem","id","_useState","useState","_useState2","_slicedToArray","modalDelOpen","setModalDelOpen","deleteContact","List","ListItem","ContactList","visibleContacts","numberContacts","_Fragment","map","item","_objectSpread","PhonebookList","useEffect","fetchContacts","Loader","helmetContext","Phonebook","HelmetProvider","context","Helmet"],"sourceRoot":""}