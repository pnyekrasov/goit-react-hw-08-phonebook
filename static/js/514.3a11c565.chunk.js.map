{"version":3,"file":"static/js/514.3a11c565.chunk.js","mappings":"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","sources":["components/Forms/Form.staled.js","redux/Phonebook/selectors.js","components/Forms/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Modal/Modal.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/PhonebookList/PhonebookList.staled.js","components/PhonebookList/PhonebookList.jsx","pages/Phonebook.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Field, Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  width: 400px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n  width: 180px;\n  border: 1px solid #e8ebef;\n  box-shadow: inset 2px 2px rgba(0, 0, 0, 0.2);\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: red;\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport const selectNumberContacts = createSelector(\n  [selectContacts],\n  contacts => {\n    return contacts.length;\n  }\n);\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Label, StyledForm, StyledField, StyledError } from './Form.staled';\n\nconst schema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name is required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    ),\n  number: Yup.string()\n    .required('Phone number is required')\n    .matches(\n      /\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    ),\n});\n\nexport const ContactForm = ({\n  handleSubmit,\n  name = '',\n  number = '',\n  Button,\n  Color,\n  Padding,\n}) => {\n  return (\n    <Formik\n      initialValues={{\n        name: name,\n        number: number,\n      }}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <StyledForm style={{ paddingLeft: Padding }}>\n        <Label>\n          Name\n          <StyledField name=\"name\" />\n          <StyledError name=\"name\" component=\"div\" />\n        </Label>\n\n        <Label>\n          Phone Number\n          <StyledField name=\"number\" placeholder=\"XXX-XX-XX\" />\n          <StyledError name=\"number\" component=\"div\" />\n        </Label>\n\n        <button type=\"submit\" style={{ backgroundColor: Color }}>\n          {Button}\n        </button>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  font-size: 20px;\n`;\n\nexport const InputFilter = styled.input`\n  margin-bottom: 20px;\n  padding: 4px;\n  width: 180px;\n  border: 1px solid #e8ebef;\n  box-shadow: inset 2px 2px rgba(0, 0, 0, 0.2);\n`;\n","import { useDispatch } from 'react-redux';\n\nimport { getVisibleContacts } from 'redux/Phonebook/filterSlice';\n\nimport { InputFilter, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  return (\n    <Label>\n      Find contact by name\n      <InputFilter\n        type=\"text\"\n        name=\"text\"\n        onChange={evt => dispatch(getVisibleContacts(evt.target.value))}\n      />\n    </Label>\n  );\n};\n","import Modal from 'react-modal';\n\nimport './Modal.css';\n\nModal.setAppElement('#root');\n\nexport const ModalWindow = ({ isOpen, isClose, children }) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      onRequestClose={isClose}\n      overlayClassName={'modal-overlay'}\n      className={'modal-content'}\n      closeTimeoutMS={300}\n    >\n      {children}\n      <button type=\"button\" onClick={() => isClose()}>\n        Cancel\n      </button>\n    </Modal>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactCard = styled.p`\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n`;\n\nexport const Span = styled.span`\n  margin-right: 48px;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { deleteContact, editContact } from 'redux/Phonebook/operations';\nimport { ContactForm } from 'components/Forms/ContactForm';\nimport { ModalWindow } from 'components/Modal/Modal';\n\nimport { ContactCard, Span } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const [modalDelOpen, setModalDelOpen] = useState(false);\n  const [modalEditOpen, setModalEditOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const isClose = () => setModalEditOpen(false);\n\n  const handleSubmit = (values, actions) => {\n    dispatch(editContact({ ...values, id }));\n    isClose();\n    actions.resetForm();\n  };\n\n  return (\n    <ContactCard>\n      {name}:&nbsp;<Span>{number}</Span>\n      <button type=\"button\" onClick={() => setModalDelOpen(true)}>\n        Delete\n      </button>\n      <ModalWindow isOpen={modalDelOpen} isClose={() => setModalDelOpen(false)}>\n        <h2>Are you sure that you want to delete this contact?</h2>\n        <button\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(id))}\n          style={{ backgroundColor: '#ec7733' }}\n        >\n          Delete\n        </button>\n      </ModalWindow>\n      <button\n        type=\"button\"\n        onClick={() => setModalEditOpen(true)}\n        style={{ marginLeft: '8px' }}\n      >\n        Edit\n      </button>\n      <ModalWindow\n        isOpen={modalEditOpen}\n        isClose={() => setModalEditOpen(false)}\n      >\n        <h2>Are you sure you want to make changes to this contact?</h2>\n        <ContactForm\n          handleSubmit={handleSubmit}\n          Button=\"Edit\"\n          name={name}\n          number={number}\n          Color=\"#ec7733\"\n          Padding=\"50px\"\n        />\n      </ModalWindow>\n    </ContactCard>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 12px;\n  margin-left: 44px;\n`;\n\nexport const ListItem = styled.li`\n  margin-bottom: 12px;\n`;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectNumberContacts,\n  selectVisibleContacts,\n} from 'redux/Phonebook/selectors';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\n\nimport { List, ListItem } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const numberContacts = useSelector(selectNumberContacts);\n\n  return (\n    <>\n      <p>Number of contacts:&nbsp;{numberContacts}</p>\n      <List>\n        {visibleContacts.map(item => (\n          <ListItem key={item.id}>\n            <ContactItem {...item} />\n          </ListItem>\n        ))}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactsBook = styled.div`\n  margin: 10px 50px;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact, fetchContacts } from 'redux/Phonebook/operations';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/Phonebook/selectors';\n\nimport { ContactForm } from 'components/Forms/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport { ContactsBook } from './PhonebookList.staled';\n\nexport const PhonebookList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = (values, actions) => {\n    contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    )\n      ? alert(`${values.name} is already in contacts`)\n      : dispatch(addContact(values));\n    actions.resetForm();\n  };\n\n  return (\n    <ContactsBook>\n      <h1>Phonebook</h1>\n      <ContactForm handleSubmit={handleSubmit} Button=\"Add contact\" />\n      <h2>Contacts</h2>\n      <Filter />\n      {isLoading && !error && <Loader />}\n      <ContactList />\n    </ContactsBook>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport { PhonebookList } from 'components/PhonebookList/PhonebookList';\n\nconst helmetContext = {};\n\nexport default function Phonebook() {\n  return (\n    <HelmetProvider context={helmetContext}>\n      <Helmet>\n        <title>Your phonebook</title>\n      </Helmet>\n\n      <PhonebookList />\n    </HelmetProvider>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","StyledField","Field","_templateObject3","StyledError","ErrorMessage","_templateObject4","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","selectNumberContacts","length","schema","Yup","shape","required","matches","number","ContactForm","_ref","handleSubmit","_ref$name","_ref$number","Button","Color","Padding","_jsx","Formik","initialValues","validationSchema","onSubmit","children","_jsxs","style","paddingLeft","component","placeholder","type","backgroundColor","InputFilter","input","Filter","dispatch","useDispatch","onChange","evt","getVisibleContacts","target","value","Modal","ModalWindow","isOpen","isClose","onRequestClose","overlayClassName","className","closeTimeoutMS","onClick","ContactCard","p","Span","span","ContactItem","id","_useState","useState","_useState2","_slicedToArray","modalDelOpen","setModalDelOpen","_useState3","_useState4","modalEditOpen","setModalEditOpen","deleteContact","marginLeft","values","actions","editContact","_objectSpread","resetForm","List","ul","ListItem","li","ContactList","visibleContacts","useSelector","numberContacts","_Fragment","map","item","ContactsBook","div","PhonebookList","useEffect","fetchContacts","find","alert","concat","addContact","Loader","helmetContext","Phonebook","HelmetProvider","context","Helmet"],"sourceRoot":""}